# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    name: Build on Ubuntu
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: List assets (debug)
        run: |
          echo "‚úÖ –¢–µ–∫—É—â–∏–π –ø—É—Ç—å: $PWD"
          find . -name 'logo-full.png'

      - name: Build binary
        run: |
          go build -v ./cmd/main.go -o deadendproxy-bin

      - name: Run tests
        run: go test ./...

 build-bsd:
    name: Build on FreeBSD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run in FreeBSD VM
        uses: vmactions/freebsd-vm@v1
        with:
          release: '13.2'
          mem: 2048
          prepare: |
            echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go –∏ Git"
            pkg install -y go git
          run: |
            echo "üìÇ embed static check"
            find assets/static

            echo "üß± Go version:"
            go version

            echo "üöÄ Build:"
            go build -v ./cmd/main.go -o deadendproxy-bsd

            echo "üß™ Run tests:"
            go test ./...

            echo "üõ† –ü—Ä–æ–≤–µ—Ä–∫–∞ BSD-—Å–∫—Ä–∏–ø—Ç–∞:"
            chmod +x scripts/deadendproxy-bsd
            ./scripts/deadendproxy-bsd config || true
